# -*- coding: utf-8 -*-
"""DBMS_PROJECT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cmQmOCjHDyhCxIAh2excmOoPHpPF7xcB
"""

from faker import Faker
import random,decimal,datetime

fake = Faker()

# def generate_customer_tuple():
#     cust_name = fake.name()
#     phone_number = fake.phone_number()
#     email_address = fake.email()
#     cust_addr = fake.address()
    # saved_payment_method = random.choice(['Visa', 'Mastercard', 'PayPal'])
#     cust_membership = random.choice(['Silver', 'Gold', 'Platinum'])
#     return (cust_name, phone_number, email_address, cust_addr, saved_payment_method, cust_membership)

# tuples = [generate_tuple() for i in range(100)]

# for t in tuples:
#     print("('{}', '{}', '{}', '{}', '{}', '{}'),".format(*t))

# def generate_seller():
#     address=fake.address()
#     name=fake.name()
#     return (name,address)

# seller_tuples=[generate_seller() for i in range(100)]
# for t in seller_tuples:
#     print("('{}', '{}'),".format(*t))

product_names=['Cormier-Bins', 'Wunsch,SkilesandMosciski', 'Kunze-Kutch', 'Heidenreich-Ernser', 'Schumm-Skiles', 'JohnsLLC', 'FayGroup', 'Marvin,RutherfordandLynch', 'Gutkowski,HilpertandKoch', 'Herzog,RitchieandWolf', 'FritschGroup', 'Weber,RathandReilly', 'ThielGroup', 'WaelchiGroup', 'Ruecker,MertzandHagenes', 'KlockoandSons', 'DuBuque-Cormier', 'HermannLLC', 'Mayert-Glover', 'Boehm,StrackeandDeckow', 'Durgan,GoyetteandZemlak', 'Gleason-Muller', 'Schuster-Grant', 'HintzandSons', 'HintzInc', 'Rosenbaum-Corkery', 'Wolf-Halvorson', 'NicolasLLC', 'Altenwerth-Thompson', 'Nikolaus,MuellerandJakubowski', 'Fisher,GoldnerandDare', 'Volkman,GottliebandFay', 'Lowe-Fadel', 'Hodkiewicz-Kessler', 'BergeLLC', 'HagenesLLC', 'Ebert,EmardandWalter', 'Hane-Hilpert', 'SengerGroup', 'Wolff,SchmidtandKeebler', 'Lang-Watsica', 'Kassulke-Pfeffer', 'BergstromandSons', 'Gerhold,FeilandRoob', 'Collins-Kiehn', 'Berge-Satterfield', 'Harris,WaelchiandMcCullough', 'KiehnGroup', 'FaheyInc', 'Farrell,MarksandLangworth', 'KleinLLC', 'Terry-Renner', 'Ratke,GoodwinandRussel', 'Kohler-Ondricka', 'WittingInc', 'Mayer,SatterfieldandKshlerin', 'KeeblerLLC', 'Sporer-Parisian', 'Leuschke,GrahamandWalker', 'Ernser,LeschandWyman', 'Lehner,KozeyandKuhlman', 'Robel,SchimmelandMonahan', 'Crona,BernierandThompson', 'RoobInc', 'Wilkinson,NienowandSchroeder', 'Fisher-Parker', 'VonRuedenGroup', 'BoyleandSons', 'WolffGroup', 'Bogisich,BeattyandHirthe', 'LehnerGroup', 'MetzLLC', 'Bruen,OsinskiandMante', 'McKenzieGroup', 'Towne,HettingerandPaucek', 'Altenwerth-Daniel', 'Ratke-Buckridge', 'Herman,McDermottandAltenwerth', 'Ritchie-Marquardt', 'Howell,DickinsonandDietrich', 'Cruickshank,WalkerandBins', 'KesslerandSons', 'Stiedemann,MrazandWalter', 'Mann-Friesen', 'RippinGroup', "Streich-O'Connell", 'HauckGroup', 'Swaniawski,NienowandStanton', 'Pouros-Hilll', 'Hartmann-Keebler', 'SchowalterInc', 'Kerluke,ToyandCummerata', 'Bosco,RoobandSchneider', 'Williamson,TrantowandKiehn', 'Lockman-Hartmann', 'Romaguera,HellerandChamplin', 'Bradtke,BeattyandSawayn', 'Ortiz-Crist', 'SchuppeInc', 'McGlynnandSons']

def generate_wishlist():
    product_id=random.randint(1,100)
    product_name=product_names[product_id-1]
    customer_id=random.randint(1,100)
    product_quantity=random.randint(1,12)
    cost=round(decimal.Decimal(random.randrange(100,50000)/100),2)
    return (product_id,customer_id,product_name,product_quantity,cost)

wishlist_tuples=[generate_wishlist() for i in range(100)]
for t in wishlist_tuples:
    print("('{}', '{}', '{}', '{}', '{}'),".format(*t))

# def generate_order():
#     delivery_address=fake.address()
#     order_status=random.choice(['Payment Complete','Dispatched','Delivered'])
#     payment_method = random.choice(['Visa', 'Mastercard', 'PayPal'])
#     order_amount=round(decimal.Decimal(random.randrange(100,50000)/100),2)
#     tracking_id=random.randint(1,100)
#     return (delivery_address,order_status,order_amount,payment_method,tracking_id)

# order_tuples=[generate_order() for i in range(100)]
# for t in order_tuples:
#     print("('{}', '{}', '{}', '{}', '{}'),".format(*t))

start = datetime.date(2023, 1, 1)
end = datetime.date(2023, 12, 31)

# def generate_order_details():
#     shipper_name=fake.name()
#     location=fake.address()
    # delivery_date = start + (end - start) * random.random()
#     return (shipper_name,location,delivery_date)

# def generate_coupon():
#     discount=random.randint(10,50)
#     expiry_date = start + (end - start) * random.random()
#     return (discount,expiry_date)

# order_tuples=[generate_coupon() for i in range(100)]
# for t in order_tuples:
#     print("('{}', '{}'),".format(*t))

import random
import datetime

start = datetime.date(2023, 1, 1)
end = datetime.date(2023, 12, 31)

random_date = start + (end - start) * random.random()
print(random_date)

pip install faker